// Generated by view binder compiler. Do not edit!
package com.example.cortinapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cortinapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewTaskBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatEditText editTextAlto;

  @NonNull
  public final AppCompatEditText editTextAncho;

  @NonNull
  public final AppCompatEditText editTextArea;

  @NonNull
  public final AppCompatEditText editTextCantidadCuotas;

  @NonNull
  public final AppCompatEditText editTextCodigo;

  @NonNull
  public final AppCompatEditText editTextCuotaActual;

  @NonNull
  public final AppCompatEditText editTextCuotaSemanal;

  @NonNull
  public final AppCompatEditText editTextDocumentoDelCliente;

  @NonNull
  public final AppCompatEditText editTextDocumentoDelVendedor;

  @NonNull
  public final AppCompatEditText editTextSaldo;

  private ActivityNewTaskBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatEditText editTextAlto, @NonNull AppCompatEditText editTextAncho,
      @NonNull AppCompatEditText editTextArea, @NonNull AppCompatEditText editTextCantidadCuotas,
      @NonNull AppCompatEditText editTextCodigo, @NonNull AppCompatEditText editTextCuotaActual,
      @NonNull AppCompatEditText editTextCuotaSemanal,
      @NonNull AppCompatEditText editTextDocumentoDelCliente,
      @NonNull AppCompatEditText editTextDocumentoDelVendedor,
      @NonNull AppCompatEditText editTextSaldo) {
    this.rootView = rootView;
    this.editTextAlto = editTextAlto;
    this.editTextAncho = editTextAncho;
    this.editTextArea = editTextArea;
    this.editTextCantidadCuotas = editTextCantidadCuotas;
    this.editTextCodigo = editTextCodigo;
    this.editTextCuotaActual = editTextCuotaActual;
    this.editTextCuotaSemanal = editTextCuotaSemanal;
    this.editTextDocumentoDelCliente = editTextDocumentoDelCliente;
    this.editTextDocumentoDelVendedor = editTextDocumentoDelVendedor;
    this.editTextSaldo = editTextSaldo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextAlto;
      AppCompatEditText editTextAlto = ViewBindings.findChildViewById(rootView, id);
      if (editTextAlto == null) {
        break missingId;
      }

      id = R.id.editTextAncho;
      AppCompatEditText editTextAncho = ViewBindings.findChildViewById(rootView, id);
      if (editTextAncho == null) {
        break missingId;
      }

      id = R.id.editTextArea;
      AppCompatEditText editTextArea = ViewBindings.findChildViewById(rootView, id);
      if (editTextArea == null) {
        break missingId;
      }

      id = R.id.editTextCantidadCuotas;
      AppCompatEditText editTextCantidadCuotas = ViewBindings.findChildViewById(rootView, id);
      if (editTextCantidadCuotas == null) {
        break missingId;
      }

      id = R.id.editTextCodigo;
      AppCompatEditText editTextCodigo = ViewBindings.findChildViewById(rootView, id);
      if (editTextCodigo == null) {
        break missingId;
      }

      id = R.id.editTextCuotaActual;
      AppCompatEditText editTextCuotaActual = ViewBindings.findChildViewById(rootView, id);
      if (editTextCuotaActual == null) {
        break missingId;
      }

      id = R.id.editTextCuotaSemanal;
      AppCompatEditText editTextCuotaSemanal = ViewBindings.findChildViewById(rootView, id);
      if (editTextCuotaSemanal == null) {
        break missingId;
      }

      id = R.id.editTextDocumentoDelCliente;
      AppCompatEditText editTextDocumentoDelCliente = ViewBindings.findChildViewById(rootView, id);
      if (editTextDocumentoDelCliente == null) {
        break missingId;
      }

      id = R.id.editTextDocumentoDelVendedor;
      AppCompatEditText editTextDocumentoDelVendedor = ViewBindings.findChildViewById(rootView, id);
      if (editTextDocumentoDelVendedor == null) {
        break missingId;
      }

      id = R.id.editTextSaldo;
      AppCompatEditText editTextSaldo = ViewBindings.findChildViewById(rootView, id);
      if (editTextSaldo == null) {
        break missingId;
      }

      return new ActivityNewTaskBinding((LinearLayout) rootView, editTextAlto, editTextAncho,
          editTextArea, editTextCantidadCuotas, editTextCodigo, editTextCuotaActual,
          editTextCuotaSemanal, editTextDocumentoDelCliente, editTextDocumentoDelVendedor,
          editTextSaldo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
